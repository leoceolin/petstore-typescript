/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { userCreate } from "../funcs/userCreate.js";
import { userGet } from "../funcs/userGet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class User extends ClientSDK {
  /**
   * Create user
   *
   * @remarks
   * This can only be done by the logged in user.
   */
  async create(
    request?: components.User | undefined,
    options?: RequestOptions,
  ): Promise<components.User> {
    return unwrapAsync(userCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get user by user name
   */
  async get(
    request: operations.GetUserByNameRequest,
    options?: RequestOptions,
  ): Promise<components.User> {
    return unwrapAsync(userGet(
      this,
      request,
      options,
    ));
  }
}
